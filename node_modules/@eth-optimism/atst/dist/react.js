// src/react.ts
import {
  useNetwork,
  useContract,
  useContractRead,
  useContractWrite,
  usePrepareContractWrite,
  useContractEvent
} from "wagmi";
var attestationStationABI = [
  { stateMutability: "nonpayable", type: "constructor", inputs: [] },
  {
    type: "event",
    anonymous: false,
    inputs: [
      {
        name: "creator",
        internalType: "address",
        type: "address",
        indexed: true
      },
      {
        name: "about",
        internalType: "address",
        type: "address",
        indexed: true
      },
      { name: "key", internalType: "bytes32", type: "bytes32", indexed: true },
      { name: "val", internalType: "bytes", type: "bytes", indexed: false }
    ],
    name: "AttestationCreated"
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      {
        name: "_attestations",
        internalType: "struct AttestationStation.AttestationData[]",
        type: "tuple[]",
        components: [
          { name: "about", internalType: "address", type: "address" },
          { name: "key", internalType: "bytes32", type: "bytes32" },
          { name: "val", internalType: "bytes", type: "bytes" }
        ]
      }
    ],
    name: "attest",
    outputs: []
  },
  {
    stateMutability: "nonpayable",
    type: "function",
    inputs: [
      { name: "_about", internalType: "address", type: "address" },
      { name: "_key", internalType: "bytes32", type: "bytes32" },
      { name: "_val", internalType: "bytes", type: "bytes" }
    ],
    name: "attest",
    outputs: []
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "address", type: "address" },
      { name: "", internalType: "bytes32", type: "bytes32" }
    ],
    name: "attestations",
    outputs: [{ name: "", internalType: "bytes", type: "bytes" }]
  },
  {
    stateMutability: "view",
    type: "function",
    inputs: [],
    name: "version",
    outputs: [{ name: "", internalType: "string", type: "string" }]
  }
];
var attestationStationAddress = {
  10: "0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77",
  420: "0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77",
  31337: "0xEE36eaaD94d1Cc1d0eccaDb55C38bFfB6Be06C77"
};
var attestationStationConfig = {
  address: attestationStationAddress,
  abi: attestationStationABI
};
function useAttestationStation(config = {}) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContract({
    abi: attestationStationABI,
    address: attestationStationAddress[chainId],
    ...config
  });
}
function useAttestationStationRead(config = {}) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: attestationStationABI,
    address: attestationStationAddress[chainId],
    ...config
  });
}
function useAttestationStationAttestations(config = {}) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: attestationStationABI,
    address: attestationStationAddress[chainId],
    functionName: "attestations",
    ...config
  });
}
function useAttestationStationVersion(config = {}) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractRead({
    abi: attestationStationABI,
    address: attestationStationAddress[chainId],
    functionName: "version",
    ...config
  });
}
function useAttestationStationWrite(config = {}) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite({
    abi: attestationStationABI,
    address: attestationStationAddress[chainId],
    ...config
  });
}
function useAttestationStationAttest(config = {}) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractWrite({
    abi: attestationStationABI,
    address: attestationStationAddress[chainId],
    functionName: "attest",
    ...config
  });
}
function usePrepareAttestationStationWrite(config = {}) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: attestationStationABI,
    address: attestationStationAddress[chainId],
    ...config
  });
}
function usePrepareAttestationStationAttest(config = {}) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return usePrepareContractWrite({
    abi: attestationStationABI,
    address: attestationStationAddress[chainId],
    functionName: "attest",
    ...config
  });
}
function useAttestationStationEvent(config = {}) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: attestationStationABI,
    address: attestationStationAddress[chainId],
    ...config
  });
}
function useAttestationStationAttestationCreatedEvent(config = {}) {
  const { chain } = useNetwork();
  const chainId = config.chainId ?? chain?.id;
  return useContractEvent({
    abi: attestationStationABI,
    address: attestationStationAddress[chainId],
    eventName: "AttestationCreated",
    ...config
  });
}
export {
  attestationStationABI,
  attestationStationAddress,
  attestationStationConfig,
  useAttestationStation,
  useAttestationStationAttest,
  useAttestationStationAttestationCreatedEvent,
  useAttestationStationAttestations,
  useAttestationStationEvent,
  useAttestationStationRead,
  useAttestationStationVersion,
  useAttestationStationWrite,
  usePrepareAttestationStationAttest,
  usePrepareAttestationStationWrite
};
//# sourceMappingURL=react.js.map